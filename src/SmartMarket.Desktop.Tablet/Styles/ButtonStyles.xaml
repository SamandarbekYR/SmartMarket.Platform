<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ClosedButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="Transparent">
                        <Path 
                            Fill="{TemplateBinding Background}" 
                            Data="{DynamicResource x}"
                            Height="20"
                            Width="20"
                            Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        Background="{DynamicResource BFirstColor}">
                        <Path 
                            Fill="{DynamicResource FirstColor}" 
                            Data="{DynamicResource x}"
                            Height="20"
                            Width="20"
                            Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                        SnapsToDevicePixels="True"
                        Background="Gray"
                        Opacity="0.3"
                        CornerRadius="4"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 0 0 0" />
        <Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">

                        <Border Padding="0 4">
                            <Track x:Name="PART_Track"
                            IsDirectionReversed="true"
                            IsEnabled="{TemplateBinding IsMouseOver}"
                            Width="8"
                            HorizontalAlignment="Center"
                       >
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb  }" />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ViewerScrollBar" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="MainButton" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        CornerRadius="5"
                        Background="{TemplateBinding Background}">

                        <Label
                            FontFamily="Jetbrains Mono"
                            FontWeight="SemiBold"
                            Foreground="White"
                            FontSize="{TemplateBinding FontSize}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Content="{TemplateBinding Content}"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageWindow_Button" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="140"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        x:Name="B"
                        CornerRadius="5"
                        Background="#1710ED">

                        <Label
                            FontFamily="Jetbrains Mono"
                            FontWeight="SemiBold"
                            Foreground="White"
                            FontSize="{TemplateBinding FontSize}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center"
                            Content="{TemplateBinding Content}"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#3D40DF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="#1710ED"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#140ECE"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionButton" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="3 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="B"
                        CornerRadius="5"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="Transparent">

                        <Path 
                            Name="I"
                            Fill="Black" 
                            Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            Height="22"
                            Width="22"
                            Stretch="Uniform"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#464646"/>
                            <Setter TargetName="I" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#464646"/>
                            <Setter TargetName="I" Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CreateButton" TargetType="Button">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="3 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="B"
                        CornerRadius="5"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Background="Transparent">

                        <Path 
                            Name="I"
                            Fill="Black" 
                            Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                            Height="15"
                            Width="15"
                            Stretch="Uniform"/>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#464646"/>
                            <Setter TargetName="I" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#464646"/>
                            <Setter TargetName="I" Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ActionButton2" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                    Background="White"
                    x:Name="B" 
                    CornerRadius="10">

                        <Path 
                        Grid.Column="0"
                        x:Name="Icon" 
                        Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                        Fill="{TemplateBinding Background}"
                        Height="16"
                        Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#CFCFCF"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="B" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="B" Property="Background" Value="#B6B6B6"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>